# Generated by Django 2.2.7 on 2019-11-27 03:03

import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion
import django_poly_dag.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='BaseGeoEdge',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32)),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
        ),
        migrations.CreateModel(
            name='BaseGeoNode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32)),
                ('children', models.ManyToManyField(blank=True, related_name='_parents', through='geography.BaseGeoEdge', to='geography.BaseGeoNode')),
                ('polymorphic_ctype', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_geography.basegeonode_set+', to='contenttypes.ContentType')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=(models.Model, django_poly_dag.models.NodeBase),
        ),
        migrations.CreateModel(
            name='WorldBorder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('area', models.IntegerField()),
                ('pop2005', models.IntegerField(verbose_name='Population 2005')),
                ('fips', models.CharField(max_length=2, verbose_name='FIPS Code')),
                ('iso2', models.CharField(max_length=2, verbose_name='2 Digit ISO')),
                ('iso3', models.CharField(max_length=3, verbose_name='3 Digit ISO')),
                ('un', models.IntegerField(verbose_name='United Nations Code')),
                ('region', models.IntegerField(verbose_name='Region Code')),
                ('subregion', models.IntegerField(verbose_name='Sub-Region Code')),
                ('lon', models.FloatField()),
                ('lat', models.FloatField()),
                ('mpoly', django.contrib.gis.db.models.fields.MultiPolygonField(srid=4326)),
            ],
        ),
        migrations.CreateModel(
            name='GeoCanalNode',
            fields=[
                ('basegeonode_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='geography.BaseGeoNode')),
                ('line', django.contrib.gis.db.models.fields.LineStringField(srid=4326)),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('geography.basegeonode',),
        ),
        migrations.CreateModel(
            name='GeoPumpNode',
            fields=[
                ('basegeonode_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='geography.BaseGeoNode')),
                ('point', django.contrib.gis.db.models.fields.PointField(srid=4326)),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('geography.basegeonode',),
        ),
        migrations.AddField(
            model_name='basegeoedge',
            name='child',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='BaseGeoNode_parent', to='geography.BaseGeoNode'),
        ),
        migrations.AddField(
            model_name='basegeoedge',
            name='parent',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='BaseGeoNode_child', to='geography.BaseGeoNode'),
        ),
        migrations.AddField(
            model_name='basegeoedge',
            name='polymorphic_ctype',
            field=models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_geography.basegeoedge_set+', to='contenttypes.ContentType'),
        ),
    ]
